# note: # represents comment.
version: '3'  
services:
  mysql:
    # *-----------------------------*
    # To connect to the DB from command prompt:
    #   syntax : docker-compose exec <SERVICE_NAME> bash -c "mysql -u root -p<ROOT_PASSWORD>"
    #   docker-compose exec mysql bash -c "mysql -u root -proot"
    # *-----------------------------*
    image: mysql:5.7
    container_name: app_mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      #If needed one more user
      #- MYSQL_USER=user1
      #- MYSQL_PASSWORD=password
    volumes:
      - ./data/mysql:/docker-entrypoint-initdb.d/
      - ./data/mysql/db:/var/lib/mysql
    # ref : https://hub.docker.com/_/mysql
  
  # mongo:
  #   image: mongo
  #   restart: always
  #   container_name: app_mongo
  #   ports:
  #     - 27017:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: root
  #   volumes:
  #     - ./data/mongo:/data/db

  rabbitmq:
    container_name: app_rabbitmq
    image: 'rabbitmq:3-management'
    ports:
      - '4369:4369'
      - '5672:5672'
      - '25672:25672'
      - '15672:15672'
    # mount didn't work for my system, but others can give a try
    # volumes:
    #   - ./data/rabbitmq/etc/:/etc/rabbitmq/
    #   - ./data/rabbitmq/data/:/var/lib/rabbitmq/
    #   - ./data/rabbitmq/logs/:/var/log/rabbitmq/
    # environment:
    #   - RABBITMQ_ERLANG_COOKIE=ZDCLFYBPXWNKFNCWBJJR

  redis:
    # *-----------------------------*
    # To connect to the REDIS through Command Prompt:
    #   syntax : docker-compose exec <SERVICE_NAME> bash -c "redis-cli"
    #   docker-compose exec redis bash -c "redis-cli"
    # *-----------------------------*
    image: redis:5.0.2
    container_name: app_redis
    ports:
      - 6379:6379
    volumes:
      - ./data/redis:/data
    # ref : https://hub.docker.com/_/redis/

  activemq:
    image: rmohr/activemq:5.15.6
    container_name: app_activemq
    ports:
      # ui
      - 8161:8161
      # jms
      - 61616:61616
      - 61613:61613
    environment:
      ACTIVEMQ_MIN_MEMORY: 512
      ACTIVEMQ_MAX_MEMORY: 1024
   #volumes:
   #  - ./data/activemq/data:/data/activemq
   # can't mounted
    

  couchbase:
    image: couchbase/server:community-6.0.0
    container_name: app_cocuchbase
    deploy:
      replicas: 1
    ports:
      - 8091:8091
      - 8092:8092
      - 8093:8093
      - 8094:8094
      - 11210:11210
      - 9999:9999
    volumes:
      - ./data/couchbase:/opt/couchbase/var

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    container_name: app_elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.1
    container_name: kibana1
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  
